超大规模投放系统索引设计

问题背景：
假设系统中有上千万个投放单，每个投放单有最多上十个创意，系统需要应对每秒上千万的广告请求，请设计一个架构使得投放系统足够的高效可靠。

Presumption:
假设广告请求包含了多个维度的信息，每个投放单可以选择针对某个维度的定向。
方便起见，假设现在有三个这样的基本维度，Platform,Category,Geo
每个维度都是一个categorical type。
Platform 的可能值为 安卓，IOS，PC;
Category的可能值为游戏，娱乐，读书，教育，体育等等，假设总共有10个主要类别;
Geo的可能值为北京，上海，杭州等等，假设总共有10个主要类别。

一个投放单如果希望匹配安卓流量，那么就应该加上安卓的Platform定向;如果希望匹配所有Platform的流量，就应该同时加上安卓定向,IOS定向，PC定向。

由此可知，一个投放单对于这三个基本维度的投放组合的可能性总共有2^3 * 2^10 * 2^10 = 2^23 ,约800万种组合。

方案1：
如果为每种组合创建倒排索引，每个组合存储所有归属于此组合的投放单ID。

若这种存储是可行的，当一个流量到达，比方说一个包含(安卓，体育，上海)的流量，那么可能匹配这个流量的投放组合有 2^2 * 2^9 * 2^9 = 2^20 约100万种组合，
实时的话，同时去查询100万个组合显然是不合理的。
离线情形，针对这三个维度，流量组合共有3*10*10=300种情况，每种情况关联了100万种定向倒排索引，也就是说共要进行3亿次集合交集运算。
离线运算过程使用spark集群计算。流量到来根据流量组合直接查找离线计算的结果。
难点：
1）投放单更改定向条件后涉及到的索引的更改；
2）离线任务的间隔与系统敏捷性的权衡；
3）运算量巨大，难以利用数据局部性

方案2：
若单独为每个维度存储组合，那么Platform 共有3个组合，Category共有10个组合，Geo 共有10个组合。
为每个维度下的组合创建倒排索引，每个组合存储所有归属于此组合的投放单ID。

若这种存储是可行的，当一个流量到达，比方说一个包含(安卓，体育，上海)的流量，只需要分别对三个维度做三次查询。
查询分别对应的是能匹配安卓的投放单集合A，能匹配体育的投放单集合B，能匹配上海的投放单集合C，再对A,B,C作一次交集运算。
而A,B,C的结果实际上是对应维度的并集。
实时运算，同样会有性能问题。
离线情形，每个投放单在确认投放定向后，便可以立刻更新对应定向维度的并集；离线任务只需要针对300种流量组合，做共900次交集运算。
流量到来直接根据流量组合情况，查找离线计算结果即可。
相比起1，2方案的优点有：
1）计算量更小，投放单修改的commit过程更容易维护；
2）做交集运算时，中间结果有可能被二次利用。
3）索引的占用内存为投放单的总数量的常数倍，约为维度的数量与投放单总数量的乘积。
4）便于扩展

难点：同样有离线任务计算间隔与敏捷性的权衡问题。

对于多项式乘法问题，常规方法的时间复杂度为O(N^2)。
如果对多项式使用点值法表示，借用信号处理领域的快速离散傅里叶变换算法，可以将时间复杂度加速至O(nlogn)。

T(k,a,N,b,d)表示第k个采样的点值，其中a是系数数组的引用，在数组a中的迭代次数，b表示本次计算的子数组在a中的偏移位置，d表示计算的子数组的在a中项的间隔。
T(k,a,N,b,d)=sum(a[b+d*i]*W[N]^(k*i),0,N-1)
T(k,a,N,b,d)=T(k,a,N/2,b,2d)+W[N]^k*T(k,a,N/2,b+d,2d)

其中W[N]是1的N阶单位复根。
记W[N][k] = W[N]^k
又有
（1）k<N/2,有W[N][k+N/2]=-W[N][k]
（2）k为偶数，W[N][k] = W[N/2][k/2]；k为奇数，W[N][k] = W[N/2][k/2]*W[N][1]

可以先对W[N][k]进行预计算，计算复杂度O(nlogn)，然后再对T进行递归计算，将不同的k的T计算出来，总体计算复杂度也为O(nlogn)。
上述关于T递归计算过程包含有一些重复的计算，可以使用缓存技术，或者改成非递归写法。
